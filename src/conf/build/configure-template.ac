# 'configure-template.ac' is the source file in charge of dealing
# with the Autoconf/Automake macros to be found in the generated
# 'configure.ac'. One can use the 'checkConfigure.sh' script to check
# whether the corresponding 'configure.ac' is the appropriate result.

# This is a way of customizing settings prior to the whole 'autogen.sh' process,
# leading to have the build system generated. 


AC_PREREQ(2.59)


# Declaration section for the Autotools macros.


AC_INIT([ST_PROJECT_NAME],[ST_VERSION],[ST_MAILING_LIST_BUGTRACKING])

AC_CONFIG_SRCDIR([ST_CONFIG_HEADER.in])
AC_CONFIG_AUX_DIR([src/conf/build])

# Detects the canonical host and target build environment :
AC_CANONICAL_TARGET

# 'tar-ustar' selects the ustar format defined by POSIX 1003.1-1988. 
# This format is believed to be old enough to be portable, and allows
# for paths longer than 99 characters :
AM_INIT_AUTOMAKE([tar-ustar])

# OSDLTemporaryConfig.h is the first basic config file to be generated,
# it contains what classically is in an usual config.h.
# It is then transformed by AX_PREFIX_CONFIG_H into OSDLConfig.h, whose
# defines are prefixed and have include guards.
# Finally AC_CONFIG_COMMANDS updates OSDLConfig.h so that symbols
# such as OSDL_HAVE_CTIME are replaced by OSDL_USES_CTIME.

# This macro adds '-DHAVE_CONFIG_H' in DEFS for compiler, but OSDL
# ignores this too common (hence risky) symbol, and uses 
# OSDL_USES_CONFIG_H instead.
AC_CONFIG_HEADERS([ST_CONFIG_HEADER],[],[])
OSDL_CPPFLAGS="-DOSDL_USES_CONFIG_H $OSDL_CPPFLAGS"


# OSDLConfig.h will be the only config header to be installed.
# It is obtained from ST_CONFIG_HEADER by renaming all entries that may 
# clash when included by some user code.
# Ex : HAVE_CTIME is ultimately renamed to OSDL_USES_CTIME
AX_PREFIX_CONFIG_H([src/code/OSDLConfig.h])

# How to use it remains unclear : #AC_CONFIG_HEADERS([ST_CONFIG_HEADER:src/conf/build/OSDLConfig-header.in:src/conf/build/OSDLConfig-footer.in])



# Naming section.

PROJECT_NAME=ST_PROJECT_NAME
AC_SUBST(PROJECT_NAME)

UNIX_PROJECT_NAME=ST_UNIX_PROJECT_NAME
AC_SUBST(UNIX_PROJECT_NAME)



# OSDL version numbers for current release.


# Actual release date.

OSDL_RELEASE_DATE=ST_DATE_OF_RELEASE
AC_SUBST(OSDL_RELEASE_DATE)


# Usual versioning. 


OSDL_MAJOR_VERSION=ST_MAJOR_VERSION
AC_SUBST(OSDL_MAJOR_VERSION)

OSDL_MINOR_VERSION=ST_MINOR_VERSION
AC_SUBST(OSDL_MINOR_VERSION)

OSDL_RELEASE=ST_RELEASE
AC_SUBST(OSDL_RELEASE)


OSDL_VERSION=ST_VERSION
AC_SUBST(OSDL_VERSION)

OSDL_FULL_VERSION=ST_FULL_VERSION
AC_SUBST(OSDL_FULL_VERSION)



# Libtool-style versioning.

OSDL_MAJOR_ANCESTOR=ST_MAJOR_ANCESTOR
AC_SUBST(OSDL_MAJOR_ANCESTOR)

# From previous variables Libtool version can be deduced :

OSDL_LT_RELEASE=$OSDL_VERSION
AC_SUBST(OSDL_LT_RELEASE)


OSDL_LT_CURRENT=$OSDL_MAJOR_VERSION
AC_SUBST(OSDL_LT_CURRENT)

OSDL_LT_REVISION=$OSDL_MINOR_VERSION
AC_SUBST(OSDL_LT_REVISION)

OSDL_LT_AGE=`expr $OSDL_MAJOR_VERSION - $OSDL_MAJOR_ANCESTOR`
AC_SUBST(OSDL_LT_AGE)


OSDL_LIBTOOL_VERSION="$OSDL_LT_CURRENT.$OSDL_LT_REVISION.$OSDL_LT_AGE"
# The OSDL_LIBTOOL_VERSION symbol is used to update
# generic/OSDLHeaderVersion.cc with the actual OSDL libtool version, 
# so that this header-embedded version can be compared with the library
# version (see : test/osdl.m4). 
AC_SUBST(OSDL_LIBTOOL_VERSION)


# The value must be quoted with "" since it will be an argument of a C++ 
# function call.
# See : generic/OSDLUtils.cc for the library-embedded version.
AC_DEFINE_UNQUOTED([LIBTOOL_VERSION],
	["$OSDL_LIBTOOL_VERSION"],
	[Current Libtool version for the OSDL library])

# pkgconfig .pc file.
OSDL_PKGCONFIG_FILE="osdl-${OSDL_VERSION}.pc"
AC_SUBST(OSDL_PKGCONFIG_FILE)


# Archive base directory. 
OSDL_ARCHIVE_DIR="\${HOME}/Archive/${PROJECT_NAME}"
AC_SUBST(OSDL_ARCHIVE_DIR)

# The OSDL source archive downloaded by LOANI :
OSDL_CURRENT_SOURCE_ARCHIVE="osdl-$OSDL_VERSION.tar.bz2"
AC_SUBST(OSDL_CURRENT_SOURCE_ARCHIVE)


# Documentation section.

OSDL_SF_WEB_SERVER="sourceforge.net"
AC_SUBST(OSDL_SF_WEB_SERVER)

OSDL_SF_URL="http://${UNIX_PROJECT_NAME}.${OSDL_SF_WEB_SERVER}"
AC_SUBST(OSDL_SF_URL)

OSDL_SF_VERSION_URL="${OSDL_SF_URL}/${PROJECT_NAME}-${OSDL_VERSION}"
AC_SUBST(OSDL_SF_VERSION_URL)

OSDL_MIRROR_WEB_SERVER="esperide.com"
AC_SUBST(OSDL_MIRROR_WEB_SERVER)

# Used not to mix projects and versions :
OSDL_CURRENT_VERSION_PREFIX="${PROJECT_NAME}-${OSDL_VERSION}"
AC_SUBST(OSDL_CURRENT_VERSION_PREFIX)


# Local directories.
# They are gathered here since doxygen configuration file needs them also.

# Local root of the whole OSDL documentation :
# If the user wants to redefine his prefix, then he should reconfigure the
# package : if not hardcoding the prefix at the configure step, then for
# example we could not use autoconf to generate doxygen.conf which needs
# a full expanded output path (hence not containing ${prefix}).
OSDL_LOCAL_DOC_DIR="\${prefix}/share/${PROJECT_NAME}/doc"
AC_SUBST(OSDL_LOCAL_DOC_DIR)

# Local root of the whole OSDL html documentation :
# (ex : PREFIX/doc/web)
OSDL_LOCAL_WEB_DIR=$OSDL_LOCAL_DOC_DIR/web
AC_SUBST(OSDL_LOCAL_WEB_DIR)

# Local root of the whole OSDL general html documentation :
# (not specific to any version; no special subdirectory used)
# (ex : PREFIX/doc/web)
OSDL_LOCAL_WEB_SHARED_DIR=$OSDL_LOCAL_WEB_DIR
AC_SUBST(OSDL_LOCAL_WEB_SHARED_DIR)


# Local root of the OSDL HTML documentation specific to this current version :
# (ex : PREFIX/doc/web/OSDL-u.v)
OSDL_LOCAL_WEB_CURRENT_VERSION_DIR=$OSDL_LOCAL_WEB_DIR/$OSDL_CURRENT_VERSION_PREFIX
AC_SUBST(OSDL_LOCAL_WEB_CURRENT_VERSION_DIR)


# Local root of the OSDL API HTML documentation specific to this current
# version :
# (ex : PREFIX/doc/web/OSDL-u.v/api)
OSDL_LOCAL_WEB_CURRENT_VERSION_API_DIR=$OSDL_LOCAL_WEB_DIR/$OSDL_CURRENT_VERSION_PREFIX/api
AC_SUBST(OSDL_LOCAL_WEB_CURRENT_VERSION_API_DIR)



# Support section.

OSDL_MAILING_LIST_SUPPORT=ST_MAILING_LIST_SUPPORT
AC_SUBST(OSDL_MAILING_LIST_SUPPORT)

OSDL_MAILING_LIST_BUGTRACKING=ST_MAILING_LIST_BUGTRACKING
AC_SUBST(OSDL_MAILING_LIST_BUGTRACKING)



# If the user did not override CXXFLAGS, provide our own default settings :
# (in all cases the clumsy "-g -O2" automake default is removed) 
CXXFLAGS=${CXXFLAGS-""}


# Checks for programs :
AC_PROG_CXX
AC_PROG_AWK
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AM_PROG_LIBTOOL

# Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT

# Only headers independent from all OSDL features are checked here : 
# (actually nothing to test, everything is provided by Ceylan)
#AC_CHECK_HEADERS([])


# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM
AC_C_VOLATILE


# Checks for libraries.


# Checks for library functions.
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_ERROR_AT_LINE
AC_FUNC_FORK
# No, 'malloc' was only in a comment : AC_FUNC_MALLOC
AC_FUNC_SELECT_ARGTYPES
AC_TYPE_SIGNAL
AC_FUNC_STAT
AC_FUNC_UTIME_NULL


# Only functions independent from all OSDL features are checked here. 
# (actually nothing to test, everything is provided by Ceylan)
#AC_CHECK_FUNCS([])



# Prerequesites section.

# The versions must be specified here, as they are needed to call the
# m4 configure macros (ex : AM_PATH_SDL( 1.2.11 ...)) and they are used
# to generate OSDLToolsSettings.inc.




# SDL.

SDL_RECOMMENDED_VERSION="1.2.11"
AC_SUBST(SDL_RECOMMENDED_VERSION)

SDL_OLDEST_SUPPORTED_VERSION="$SDL_RECOMMENDED_VERSION"
AC_SUBST(SDL_OLDEST_SUPPORTED_VERSION)

# Checks for the SDL library (see sdl.m4)
AM_PATH_SDL($SDL_OLDEST_SUPPORTED_VERSION,[
	OSDL_CPPFLAGS="$OSDL_CPPFLAGS $SDL_CFLAGS"
	OSDL_LIBS="$OSDL_LIBS $SDL_LIBS"],[
	AC_MSG_ERROR([No usable SDL installation found, minimum requested version was $SDL_OLDEST_SUPPORTED_VERSION.])
	])


	
# Ceylan.

CEYLAN_RECOMMENDED_MAJOR="0"
AC_SUBST(CEYLAN_RECOMMENDED_MAJOR)

CEYLAN_RECOMMENDED_MINOR="5"
AC_SUBST(CEYLAN_RECOMMENDED_MAJOR)

CEYLAN_RECOMMENDED_RELEASE="0"
AC_SUBST(CEYLAN_RECOMMENDED_RELEASE)


CEYLAN_OLDEST_SUPPORTED_MAJOR="$CEYLAN_RECOMMENDED_MAJOR"
AC_SUBST(CEYLAN_OLDEST_SUPPORTED_MAJOR)

CEYLAN_OLDEST_SUPPORTED_MINOR="$CEYLAN_RECOMMENDED_MINOR"
AC_SUBST(CEYLAN_OLDEST_SUPPORTED_MINOR)

CEYLAN_OLDEST_SUPPORTED_RELEASE="$CEYLAN_RECOMMENDED_RELEASE"
AC_SUBST(CEYLAN_OLDEST_SUPPORTED_RELEASE)


# Checks for the Ceylan library (see ceylan.m4)
CEYLAN_PATH($CEYLAN_OLDEST_SUPPORTED_MAJOR,$CEYLAN_OLDEST_SUPPORTED_MINOR,$CEYLAN_OLDEST_SUPPORTED_RELEASE)

# CEYLAN_PREFIX is set by CEYLAN_PATH :
CEYLAN_INSTALL_ROOT="$CEYLAN_PREFIX"
AC_SUBST(CEYLAN_INSTALL_ROOT)

OSDL_CPPFLAGS="$OSDL_CPPFLAGS $CEYLAN_CPPFLAGS"
OSDL_LIBS="$OSDL_LIBS $CEYLAN_LIBS"



# Build section.


OSDL_TEST_DIR="\${exec_prefix}/tests"
AC_SUBST(OSDL_TEST_DIR)


# First module level (in src/code) section.

OSDL_AUDIO="\$(top_srcdir)/src/code/audio"
AC_SUBST(OSDL_AUDIO)

OSDL_BASIC="\$(top_srcdir)/src/code/basic"
AC_SUBST(OSDL_BASIC)

OSDL_ENGINE="\$(top_srcdir)/src/code/engine"
AC_SUBST(OSDL_ENGINE)

OSDL_EVENTS="\$(top_srcdir)/src/code/events"
AC_SUBST(OSDL_EVENTS)

OSDL_VIDEO="\$(top_srcdir)/src/code/video"
AC_SUBST(OSDL_VIDEO)


# Second module level (in src/code/<a module>) section.

OSDL_AUDIO_RENDERER="$OSDL_AUDIO/renderer"
AC_SUBST(OSDL_AUDIO_RENDERER)

OSDL_VIDEO_RENDERER="$OSDL_VIDEO/renderer"
AC_SUBST(OSDL_VIDEO_RENDERER)

OSDL_VIDEO_TWO_DIMENSIONAL="$OSDL_VIDEO/twoDimensional"
AC_SUBST(OSDL_VIDEO_TWO_DIMENSIONAL)


# Substitution script to update various project templates.
OSDL_SUBSTITUTE="\$(top_srcdir)/src/code/scripts/shell/substitute.sh"
AC_SUBST(OSDL_SUBSTITUTE)


# Compiler-specific optimization flags.


# Debug versus optimizations section.

# See if the user wants aggressive optimizations of the code :
AC_ARG_ENABLE(debug,
	AS_HELP_STRING(--enable-debug,[disable aggressive optimizations [[default=yes]]]),,enable_debug=yes)
if test x$enable_debug = xyes; then

	# Debug requested :
	DEBUG=1
	DEBUG_WIDGET=0
	DEBUG_FONT=0
	DEBUG_EVENTS=0
	DEBUG_VIDEO_RENDERER=0
	DEBUG_AUDIO_RENDERER=0
	DEBUG_PIXEL=0
	DEBUG_BOUNDING_BOX=0
	DEBUG_SCHEDULER=0
	
	VERBOSE_KEYBOARD_HANDLER=0
	VERBOSE_JOYSTICK_HANDLER=0
	VERBOSE_JOYSTICK=0
	VERBOSE_CONTROLLER=0
	
	COUNT_INSTANCES=0
	
		
	AM_CXXFLAGS="$AM_CXXFLAGS -g" 
    if test x$ac_cv_cxx_compiler_gnu = xyes; then
		# Add -pg to manage profile information for gprof.
		# -fstack-check used to be specified but wroke havoc in generated code,
		# causing crashes and various valgrind reports.
		#AM_CXXFLAGS="$AM_CXXFLAGS -ggdb -O0 -fno-inline -fbounds-check -ftrapv -fnon-call-exceptions"
		# Safest settings :
		AM_CXXFLAGS="$AM_CXXFLAGS -ggdb -O0 -fno-inline"				
	fi	 
else

	# Aggressive optimizations :
	DEBUG=0
	DEBUG_WIDGET=0
	DEBUG_FONT=0
	DEBUG_EVENTS=0
	DEBUG_VIDEO_RENDERER=0
	DEBUG_AUDIO_RENDERER=0
	DEBUG_PIXEL=0
	DEBUG_BOUNDING_BOX=0
	DEBUG_SCHEDULER=0
	
	VERBOSE_KEYBOARD_HANDLER=0
	VERBOSE_JOYSTICK_HANDLER=0
	VERBOSE_JOYSTICK=0
	VERBOSE_CONTROLLER=0
	
	COUNT_INSTANCES=0
	
    if test x$ac_cv_cxx_compiler_gnu = xyes; then
		# -fomit-frame-pointer : may prevent debugging on some platforms
		# -ffast-math : not requesting exact IEEE or ISO implementation
		# rules/specifications
        AM_CXXFLAGS="$AM_CXXFLAGS -g0 -O3 -fexpensive-optimizations -fomit-frame-pointer -ffast-math -funroll-loops"
    fi
	
	AM_LDFLAGS="$AM_LDFLAGS --strip-all"
	
    case "$target" in
        i486-*-*)
            if test x$ac_cv_cxx_compiler_gnu = xyes; then
                AM_CXXFLAGS="$AM_CXXFLAGS -march=i486"
            fi
            ;;
        i?86-*-*)
            if test x$ac_cv_cxx_compiler_gnu = xyes; then
                AM_CXXFLAGS="$AM_CXXFLAGS -march=pentium -mcpu=pentiumpro"
            fi
            ;;
        *-*-osf*)
            if test x$ac_cv_cxx_compiler_gnu != xyes; then
                AM_CXXFLAGS="$AM_CXXFLAGS -g3 -fast -arch host"
            fi
            ;;
    esac
fi


AC_DEFINE_UNQUOTED([DEBUG],
	[$DEBUG],
	[Define to 1 if generic debug mode is to be enabled])

AC_DEFINE_UNQUOTED([DEBUG_WIDGET],
	[$DEBUG_WIDGET],
	[Define to 1 if debug mode for widgets is to be enabled])
	
AC_DEFINE_UNQUOTED([DEBUG_FONT],
	[$DEBUG_FONT],
	[Define to 1 if debug mode for font management is to be enabled])
	
AC_DEFINE_UNQUOTED([DEBUG_EVENTS],
	[$DEBUG_EVENTS],
	[Define to 1 if debug mode for events is to be enabled])
	
AC_DEFINE_UNQUOTED([DEBUG_VIDEO_RENDERER],
	[$DEBUG_VIDEO_RENDERER],
	[Define to 1 if debug mode for video renderer is to be enabled])
	
AC_DEFINE_UNQUOTED([DEBUG_AUDIO_RENDERER],
	[$DEBUG_AUDIO_RENDERER],
	[Define to 1 if debug mode for audio renderer is to be enabled])
	
AC_DEFINE_UNQUOTED([DEBUG_PIXEL],
	[$DEBUG_PIXEL],
	[Define to 1 if debug mode for pixel-level operations is to be enabled])
	
AC_DEFINE_UNQUOTED([DEBUG_BOUNDING_BOX],
	[$DEBUG_BOUNDING_BOX],
	[Define to 1 if debug mode for bounding boxes is to be enabled])
	
AC_DEFINE_UNQUOTED([DEBUG_SCHEDULER],
	[$DEBUG_SCHEDULER],
	[Define to 1 if debug mode for scheduler is to be enabled])
	
	
AC_DEFINE_UNQUOTED([VERBOSE_KEYBOARD_HANDLER],
	[$VERBOSE_KEYBOARD_HANDLER],
	[Define to 1 if verbose mode for keyboard handler is to be enabled])
	
AC_DEFINE_UNQUOTED([VERBOSE_JOYSTICK_HANDLER],
	[$VERBOSE_JOYSTICK_HANDLER],
	[Define to 1 if verbose mode for joystick handler is to be enabled])
	
AC_DEFINE_UNQUOTED([VERBOSE_JOYSTICK],
	[$VERBOSE_JOYSTICK],
	[Define to 1 if verbose mode for joystick is to be enabled])
	
AC_DEFINE_UNQUOTED([VERBOSE_CONTROLLER],
	[$VERBOSE_CONTROLLER],
	[Define to 1 if verbose mode for controller is to be enabled])
	
	
AC_DEFINE_UNQUOTED([COUNT_INSTANCES],
	[$COUNT_INSTANCES],
	[Define to 1 if instance counting mode is to be enabled])
	


# LOANI section.


# The version of LOANI is the same as the one of OSDL :
LOANI_VERSION=$OSDL_VERSION
AC_SUBST(LOANI_VERSION)

# LOANI installations default base directory.
OSDL_LOANI_INSTALLATIONS="\${prefix}"
AC_SUBST(OSDL_LOANI_INSTALLATIONS)

# Where the LOANI download cache will be put :
LOANI_REPOSITORY_DIR="${OSDL_LOANI_INSTALLATIONS}/../LOANI-repository"
AC_SUBST(LOANI_REPOSITORY_DIR)

# Where LOANI will install packages :
LOANI_INSTALL_DIR="${OSDL_LOANI_INSTALLATIONS}"
AC_SUBST(LOANI_INSTALL_DIR)

# The LOANI documentation page :
LOANI_WEB_HOMEPAGE="$OSDL_SF_VERSION_URL/LOANI.html"
AC_SUBST(LOANI_WEB_HOMEPAGE)

# The LOANI mailing-list for bug reports :
LOANI_MAILING_LIST=ST_MAILING_LIST_LOANI
AC_SUBST(LOANI_MAILING_LIST)


# Pre-requesite section.


# Ceylan section.

# The oldest version (x.y) of the Ceylan library that may be used by OSDL : 
CEYLAN_OLDEST_SUPPORTED_VERSION="ST_CEYLAN_OLDEST_SUPPORTED_VERSION"
AC_SUBST(CEYLAN_OLDEST_SUPPORTED_VERSION)

# The oldest full version (x.y.z) of the Ceylan library that may be 
# used by OSDL : 
CEYLAN_OLDEST_SUPPORTED_FULL_VERSION="ST_CEYLAN_OLDEST_SUPPORTED_FULL_VERSION"
AC_SUBST(CEYLAN_OLDEST_SUPPORTED_FULL_VERSION)

# The Ceylan source archive downloaded by LOANI :
CEYLAN_CURRENT_SOURCE_ARCHIVE="ceylan-$CEYLAN_OLDEST_SUPPORTED_VERSION.tar.bz2"
AC_SUBST(CEYLAN_CURRENT_SOURCE_ARCHIVE)

# Define here a CEYLAN_INSTALL_ROOT according to --with-ceylan-prefix=PFX :
AC_ARG_WITH(ceylan-prefix,[--with-ceylan-prefix=PFX   Prefix where Ceylan is installed],ceylan_prefix="$withval",ceylan_prefix="/usr/local")



# Warning and error section.

# Add verbose warnings by default, and allow ANSI compliance checking :
AC_ARG_ENABLE(strict-ansi,
	AS_HELP_STRING(--enable-strict-ansi,[enable strict ANSI compliance build [[default=yes]]]),,enable_strict_ansi=yes)
if test x$ac_cv_cxx_compiler_gnu = xyes; then
	# Basically paranoïd in all cases :
	
	# Following warnings are not used, explanations follow : 
	#    -Weffc++ : the standard library headers trigger zillions of warnings.
	#    -Waggregate-return : even a simple std::string is an aggregate.
	#    -Wunused-parameter : inherited methods may not use some of their
	# parameters, not wanting to freeze API with "__attribute__" keyword.
	#    -Wpadded : add it if wanting to reorder fields of structures to save
	# some bytes.
	#    -Wmissing-noreturn : would force declaring __attribute__ ((noreturn))
	# in every method which throws exceptions about unimplemented feature
	#	 -Wold-style-cast : some standard macros (WIFEXITED, WEXITSTATUS, 
	# etc.) expand into old-style C casts
	#    -Wunreachable-code : temporarily removed because of gcc 4.0.2
	# incorrecly complaining : 'warning: will never be executed' in Exception
	# constructor
	#
    AM_CXXFLAGS="$AM_CXXFLAGS -Wall -Werror -Woverloaded-virtual -W -Wfloat-equal -Wundef -Wendif-labels -Wshadow -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings -Wconversion -Wsign-compare -Wmissing-format-attribute -Wpacked -Wredundant-decls -Wno-unused-parameter -Wno-unknown-pragmas -Wno-long-long"
    if test x$enable_strict_ansi = xyes; then
		# Do not know what "-D_XOPEN_SOURCE" would change.
        AM_CXXFLAGS="$AM_CXXFLAGS -ansi -pedantic-errors"
    fi
fi



# Colors for build output section.

# Some color definitions, to be more readable.

# In the case your terminal does not support color, use :
# --disable-colored-build

# See also : function updateColorSupport of
# Ceylan/trunk/src/code/scripts/shell/termUtils.sh 

# Text color codes :

black_text=30
red_text=31
green_text=32
yellow_text=33
blue_text=34
magenta_text=35
cyan_text=36
white_text=37


# Background color codes :

black_back=40
red_back=41
green_back=42
yellow_back=43
blue_back=44
magenta_back=45
cyan_back=46
white_back=47


# Text attributes :

none_att=00
bold_att=01
underscore_att=04
blink_att=05
reverse_att=07
concealed_att=08

default_att=$none_att


# Pre defined text styles :

# Uses terminal features such as fancy make colors by default :
AC_ARG_ENABLE(colored-build,
	AS_HELP_STRING(--enable-colored-build,[enable colored build [[default=yes]]]),,enable_colored_build=yes)
if test x$enable_colored_build = xyes; then

	# The quadrigram '@<:@' is needed to allow for an unbalanced '[' :
	
	OSDL_DEFAULT_STYLE="@<:@${default_att};${white_text};${black_back}m"
	OSDL_TITLE_STYLE="@<:@${default_att};${magenta_text};${black_back}m"
	OSDL_ITEM_STYLE="@<:@${default_att};${cyan_text};${black_back}m"
	OSDL_COMMAND_STYLE="@<:@${default_att};${cyan_text};${black_back}m"
	OSDL_MAKE_STYLE="@<:@${default_att};${green_text};${black_back}m"
	OSDL_COMPILE_STYLE="@<:@${default_att};${cyan_text};${black_back}m"
	OSDL_LINK_STYLE="@<:@${default_att};${magenta_text};${black_back}m"
	OSDL_INSTALL_STYLE="@<:@${default_att};${blue_text};${black_back}m"
	OSDL_CLEAN_STYLE="@<:@${default_att};${yellow_text};${black_back}m"
	OSDL_ERROR_STYLE="@<:@${default_att};${white_text};${red_back}m"
	OSDL_WARNING_STYLE="@<:@${default_att};${yellow_text};${black_back}m"

else

	OSDL_DEFAULT_STYLE=""
	OSDL_TITLE_STYLE=""
	OSDL_ITEM_STYLE=""
	OSDL_COMMAND_STYLE=""
	OSDL_MAKE_STYLE=""
	OSDL_COMPILE_STYLE=""
	OSDL_LINK_STYLE=""
	OSDL_INSTALL_STYLE=""
	OSDL_CLEAN_STYLE=""
	OSDL_ERROR_STYLE=""
	OSDL_WARNING_STYLE=""

fi

AC_SUBST(OSDL_DEFAULT_STYLE)
AC_SUBST(OSDL_TITLE_STYLE)
AC_SUBST(OSDL_ITEM_STYLE)
AC_SUBST(OSDL_COMMAND_STYLE)
AC_SUBST(OSDL_MAKE_STYLE)
AC_SUBST(OSDL_COMPILE_STYLE)
AC_SUBST(OSDL_LINK_STYLE)
AC_SUBST(OSDL_INSTALL_STYLE)
AC_SUBST(OSDL_CLEAN_STYLE)
AC_SUBST(OSDL_ERROR_STYLE)
AC_SUBST(OSDL_WARNING_STYLE)







# Section of non feature-based checkings.

 


# TODO : use CXXCOMPILE/CXXLINK to customize build output.





AC_SUBST(SYSTEM_LIBS)

# Directories conditionnally selected by the configure step :
AC_SUBST(OSDL_EXTRA_DIRS)

# Libraries conditionnally selected by the configure step :
AC_SUBST(OSDL_EXTRA_LIBS)

AC_MSG_NOTICE([OSDL_CPPFLAGS = $OSDL_CPPFLAGS])
AC_MSG_NOTICE([OSDL_LIBS = $OSDL_LIBS]) 

CPPFLAGS="$CPPFLAGS $OSDL_CPPFLAGS"
AC_SUBST(CPPFLAGS)

LIBS="$LIBS $OSDL_LIBS"
AC_SUBST(LIBS)

AC_SUBST(AM_CXXFLAGS)
AC_SUBST(AM_LDFLAGS)

# Updates the config file generated by AX_PREFIX_CONFIG_H :
AC_CONFIG_COMMANDS([configprefix],[cat src/code/OSDLConfig.h | sed 's|OSDL_HAVE_|OSDL_USES_|g' > .OSDLConfig.h; echo "/* Note : NEVER commit (check-in) this generated file ! */" >> .OSDLConfig.h; /bin/mv -f .OSDLConfig.h src/code/OSDLConfig.h; /bin/rm -f _configs.sed])

AC_CONFIG_FILES([
	Makefile
	src/code/audio/audioRenderer/Makefile
	src/code/audio/Makefile
	src/code/basic/Makefile
	src/code/basic/OSDLHeaderVersion.cc
	src/code/engine/Makefile
	src/code/events/Makefile
	src/code/Makefile
	src/code/scripts/Makefile
	src/code/scripts/shell/Makefile
	src/code/video/Makefile
	src/code/video/twoDimensional/Makefile
	src/code/video/videoRenderer/Makefile
	src/conf/build/loani/LOANI-README-template.txt
	src/conf/build/loani/Makefile
	src/conf/build/m4/Makefile
	src/conf/build/m4/osdl.m4
	src/conf/build/Makefile
	src/conf/build/osdl-ST_VERSION.pc
	src/conf/build/OSDLToolsSettings.inc
	src/conf/doc/doxygen.conf
	src/conf/doc/Makefile
	src/conf/Makefile
	src/doc/basic/Makefile
	src/doc/basic/OSDL-AUTHORS-template.txt
	src/doc/basic/OSDL-COPYING.LIB-template.txt
	src/doc/basic/OSDL-FAQ-template.txt
	src/doc/basic/OSDL-INSTALL-template.txt
	src/doc/basic/OSDL-MAINTENERS-template.txt
	src/doc/basic/OSDL-NEWS-template.txt
	src/doc/basic/OSDL-README-template.txt
	src/doc/basic/OSDL-THANKS-template.txt
	src/doc/basic/OSDL-TODO-template.txt
	src/doc/Makefile
	src/Makefile
])


AC_OUTPUT

echo \
"------------------------------------------------------------------------
Configuration:

  Source code location:   ${srcdir}
  C++ compiler:           ${CXX}
  C++ compiler flags:     ${CXXFLAGS}
  Host System Type:       ${host}
  Install path (prefix):  ${prefix}

  See trunk/src/code/OSDLConfig.h for further configuration information.
------------------------------------------------------------------------"
